**Free
// PROJECT NAME: CIS 270 Project 10B
// PROGRAMMER NAME: JACOB ANDERSON
// DATE: 4/6/2022
// THE PURPOSE OF THIS PROJECT IS TO
// DEMONSTRATE MY ABILITY TO TRAP ERRORS
//---------------------------------Control options
Ctl-opt Option(*Nodebugio);
//---------------------------------File Declarations

Dcl-f MYCSTP   Disk Usage(*Update:*Output) Keyed;
Dcl-f GTCPAYP  Usage(*Update:*Output) Keyed;
Dcl-f S2PRJ2   Printer Usage(*Output) Oflind(Endofpage);

//---------------------------------Constant declarations
Dcl-s NOCUST ZONED(3:0);
Dcl-s BALANCE ZONED(6:2);
Dcl-s MSG CHAR(43);

//---------------------------------Data Structure declarations

//---------------------------------Standalone variable declarations

Dcl-s Endofpage Ind Inz(*On);

//---------------------------------Main Procedure

Read GTCPAYP;

Monitor;
Dow Not %Eof(GTCPAYP);

  CLOSE MYCSTP;

  CHAIN CPHONE MYCSTP; // Begin Chaining Keys

  If %Found(MYCSTP);   // If statement decides if the detail
    EXSR GOODCHAIN;
  Else;
    EXSR BADCHAIN;
  Endif;               //  Writes error line if info
  Read GTCPAYP;        //  is unavailable
Enddo;


Write TOTAL;           //Write Total Line
  On-error *File;
    exsr error1;
  On-error *ALL;
    EXSR ERROR2;
*Inlr = *On;           //
return;                //
Endmon;



BEGSR GOODCHAIN;

  BALANCE = AMTOWE-AMTPD; //The difference of the amount owed and amount paid is determined
  AMTOWE = BALANCE;       //The amount owed becomes the balance
  PAYDATL = DATRCVL;      //Update the date
  PAYDAT = DATRCV;        //Update the date
  CURBIL = BALANCE;       //Current bill becomes the balance
  IF BALANCE < 0;         //If the balance is below zero

    CURBIL=0;             //The current bill shows that it has been paid

  ENDIF;
  UPDATE CUSREC %FIELDS(AMTOWE:PAYDATL:PAYDAT:CURBIL); //Define update fields
  CNAME = CLNAME;
  FNAME = CFNAME;
  If Endofpage;           // line or error line will be written
    Write HEADINGS;
    Endofpage = *off;
  Endif;
  Write DETAIL;

ENDSR;


BEGSR BADCHAIN;
  MSG = '*** Customers Record Not Found ***';
  Write ERROR;         //  Write error line if MYCSTP is not found
  NOCUST += 1;         //  Customer error counter

ENDSR;

BEGSR ERROR1;
  MSG = 'Input/Output Error - Program will Terminate';
  Write ERROR; //  Write error line if MYCSTP is not found
  *INLR = *ON;
  return;
ENDSR;

BEGSR ERROR2;
  MSG1 = 'An error has occurred';
  Write ERROR; //  Write error line if MYCSTP is not found
  *INLR = *ON;
  return;
ENDSR;
                       